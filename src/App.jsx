import { useEffect, useState } from "react";
import Form from "./component/forms";
import Header from "./component/header";
import EnterPin from "./component/EnterPin";
import VerifyOTP from "./component/verifyOtp";

function App() {
  const [stages, setStage] = useState(1);
  useEffect(() => {
    const x = localStorage.getItem("completed");
    if (x) {
      setStage(3);
    }
  }, []);
  return (
    <div className="h-screen">
       {stages == 1 && <div
        className={"bg-[#e4fff1] h-[300px] flex flex-col w-full justify-between items-center py-5 pb-6 pt-16"}
      >
      <svg viewBox="0 0 135 30" className="text-black lg:w-[200px] w-[180px]" fill="black" aria-hidden="true" xmlns="http://www.w3.org/2000/svg">
        <g id="Logo" clip-path="url(#clip0_15_69)"><g id="Group"><path id="Vector" d="M13.4837 29.3628C11.6845 29.2353 10.1439 28.1301 9.4868 26.4558L7.55081 21.5262L2.41902 18.7783C0.684418 17.8494 -0.243155 16.0161 0.0552559 14.1096C0.325737 12.3794 1.54143 11.0019 3.21429 10.4758C2.78064 9.26457 2.89089 7.93434 3.52153 6.80336C4.17568 5.63367 5.31787 4.80514 6.6541 4.53135L25.8215 0.60086C27.4899 0.258268 29.1569 0.800108 30.2815 2.04863C31.406 3.29716 31.7412 4.98002 31.1782 6.5482L24.6764 24.6569C24.2221 25.9197 23.2269 26.9188 21.9451 27.399C20.6632 27.8778 19.2373 27.7832 18.0349 27.1396L17.8967 27.0665C17.1 28.4612 15.6167 29.3428 13.9247 29.3743C13.7777 29.3772 13.6293 29.3729 13.4837 29.3628ZM11.1905 23.4743L11.9932 25.5198C12.4533 26.6909 13.5499 26.7626 13.8748 26.7568C14.1644 26.7511 15.0611 26.6622 15.5476 25.8079L11.1905 23.4743ZM18.8448 24.5866L19.327 24.8446C19.8371 25.1184 20.4413 25.1586 20.9852 24.955C21.5291 24.7515 21.951 24.3286 22.1421 23.7925L28.6439 5.68384C28.882 5.01872 28.7409 4.3063 28.2632 3.77593C27.7869 3.24699 27.0798 3.01764 26.3727 3.16242L7.2083 7.09291C6.64087 7.20902 6.15724 7.56021 5.88088 8.05618C5.60305 8.55215 5.56336 9.13843 5.77063 9.66594L5.87059 9.92252L17.3513 7.66629C19.0051 7.3409 20.6588 7.8856 21.7731 9.12123C22.8874 10.3569 23.2269 12.0254 22.6845 13.5835L18.8448 24.5866ZM9.70583 19.6928L16.4561 23.3066L20.1414 12.7407C20.3722 12.0798 20.2281 11.3732 19.7548 10.8485C19.2829 10.3239 18.5817 10.0945 17.8805 10.2321L6.84373 12.4024L9.70583 19.6928ZM4.17568 12.9284C3.00261 13.208 2.75712 14.1999 2.71008 14.5052C2.66157 14.8177 2.58807 15.8828 3.71263 16.4848L6.06757 17.7448L4.17568 12.9284Z" fill="#60B863"></path><path id="Vector_2" d="M0.0552558 14.1096C-0.243155 16.0161 0.684418 17.8495 2.41902 18.7783L3.71263 16.4848C2.58807 15.8828 2.66157 14.8178 2.71008 14.5053C2.75712 14.1999 3.00261 13.208 4.17568 12.9285L3.21429 10.4759C1.54143 11.0019 0.325737 12.3795 0.0552558 14.1096Z" fill="url(#paint0_linear_15_69)"></path>
        <path id="Vector_3" d="M17.3513 7.66632L5.87061 9.92256L6.84375 12.4024L17.8805 10.2322L17.3513 7.66632Z" fill="url(#paint1_linear_15_69)"></path>
        <path id="Vector_4" d="M9.70581 19.6928L6.84372 12.4023L4.17566 12.9284L6.06755 17.7448L9.70581 19.6928Z" fill="url(#paint2_linear_15_69)"></path>
        <path id="Vector_5" d="M7.55078 21.5262L9.48678 26.4558L11.9931 25.5198L11.1905 23.4743L7.55078 21.5262Z" fill="url(#paint3_linear_15_69)"></path>
        <path id="Vector_6" d="M11.1905 23.4743L15.5476 25.8079L16.4561 23.3065L9.70581 19.6928L11.1905 23.4743Z" fill="url(#paint4_linear_15_69)"></path>
        <path id="Vector_7" d="M21.9451 27.399C23.227 26.9188 24.2222 25.9197 24.6764 24.6568L22.1421 23.7924C21.951 24.3286 21.5291 24.7514 20.9852 24.955C20.4413 25.1585 19.8371 25.1184 19.327 24.8446L18.8449 24.5866L17.8967 27.0664L18.0349 27.1395C19.2374 27.7831 20.6633 27.8778 21.9451 27.399Z" fill="url(#paint5_linear_15_69)"></path>
        </g><g id="Apexpay"><path d="M46.0525 23.4604L45.3656 21.2312H38.5224L37.8355 23.4604H34.6555L40.6593 5.9274H43.2287L49.2325 23.4604H46.0525ZM39.2855 18.6513H44.577L41.9313 9.95999L39.2855 18.6513Z" fill="black"></path>
        <path d="M58.1247 11.4879C59.8206 11.4879 61.1859 12.0556 62.2204 13.1911C63.255 14.3098 63.7723 15.7876 63.7723 17.6244C63.7723 19.4278 63.2296 20.9056 62.1441 22.0578C61.0587 23.1932 59.6595 23.761 57.9466 23.761C57.1664 23.761 56.4287 23.594 55.7333 23.26C55.038 22.9094 54.5122 22.4502 54.1561 21.8824V28.7203H51.3831V11.7884H54.1561V13.3664C54.5122 12.7987 55.0549 12.3478 55.7842 12.0139C56.5135 11.6632 57.2936 11.4879 58.1247 11.4879ZM57.5395 21.3314C58.5571 21.3314 59.3882 20.9891 60.0326 20.3045C60.6771 19.6031 60.9993 18.7098 60.9993 17.6244C60.9993 16.539 60.6771 15.654 60.0326 14.9694C59.3882 14.2681 58.5571 13.9174 57.5395 13.9174C56.488 13.9174 55.64 14.2597 54.9956 14.9444C54.3511 15.629 54.0289 16.5223 54.0289 17.6244C54.0289 18.7265 54.3511 19.6198 54.9956 20.3045C55.64 20.9891 56.488 21.3314 57.5395 21.3314Z" fill="black"></path><path d="M77.1738 17.0233C77.1738 17.3238 77.1484 17.8248 77.0975 18.5261H68.2954C68.3293 19.4445 68.6346 20.1542 69.2112 20.6551C69.7878 21.1394 70.5849 21.3815 71.6025 21.3815C72.9084 21.3815 73.7904 20.939 74.2483 20.054H77.0466C76.8601 21.1394 76.258 22.0327 75.2404 22.734C74.2398 23.4186 73.0272 23.761 71.6025 23.761C69.737 23.761 68.2615 23.2099 67.176 22.1078C66.0906 21.0058 65.5479 19.5113 65.5479 17.6244C65.5479 15.7542 66.0821 14.2681 67.1506 13.166C68.236 12.0472 69.6861 11.4879 71.5008 11.4879C73.1968 11.4879 74.562 12.0055 75.5966 13.0408C76.6481 14.0594 77.1738 15.3869 77.1738 17.0233ZM68.2954 16.4472H74.4518C74.4348 15.5455 74.1635 14.8525 73.6377 14.3683C73.1289 13.884 72.3997 13.6419 71.4499 13.6419C70.4832 13.6419 69.72 13.9007 69.1603 14.4184C68.6007 14.936 68.3123 15.6123 68.2954 16.4472Z" fill="black"></path><path d="M77.9547 23.4604L82.3304 17.5743L78.031 11.7884H81.4654L83.9331 15.5705L86.4007 11.7884H89.8351L85.5358 17.5743L89.9114 23.4604H86.477L83.9331 19.553L81.3891 23.4604H77.9547Z" fill="black"></path><path d="M98.6941 11.4879C100.39 11.4879 101.755 12.0556 102.79 13.1911C103.824 14.3098 104.342 15.7876 104.342 17.6244C104.342 19.4278 103.799 20.9056 102.714 22.0578C101.628 23.1932 100.229 23.761 98.516 23.761C97.7358 23.761 96.9981 23.594 96.3027 23.26C95.6074 22.9094 95.0816 22.4502 94.7255 21.8824V28.7203H91.9525V11.7884H94.7255V13.3664C95.0816 12.7987 95.6243 12.3478 96.3536 12.0139C97.0829 11.6632 97.863 11.4879 98.6941 11.4879ZM98.1089 21.3314C99.1265 21.3314 99.9576 20.9891 100.602 20.3045C101.247 19.6031 101.569 18.7098 101.569 17.6244C101.569 16.539 101.247 15.654 100.602 14.9694C99.9576 14.2681 99.1265 13.9174 98.1089 13.9174C97.0574 13.9174 96.2094 14.2597 95.565 14.9444C94.9205 15.629 94.5983 16.5223 94.5983 17.6244C94.5983 18.7265 94.9205 19.6198 95.565 20.3045C96.2094 20.9891 97.0574 21.3314 98.1089 21.3314Z" fill="black"></path><path d="M111.943 23.761C110.094 23.761 108.661 23.1849 107.644 22.0327C106.626 20.8805 106.117 19.4111 106.117 17.6244C106.117 15.8544 106.652 14.3933 107.72 13.2412C108.788 12.0723 110.222 11.4879 112.019 11.4879C112.816 11.4879 113.546 11.6548 114.207 11.9888C114.869 12.3228 115.377 12.782 115.734 13.3664V11.7884H118.506V23.4604H115.734V21.8824C115.394 22.4502 114.86 22.9094 114.131 23.26C113.418 23.594 112.689 23.761 111.943 23.761ZM112.35 21.3314C113.486 21.3314 114.351 20.9807 114.945 20.2794C115.555 19.5781 115.861 18.6931 115.861 17.6244C115.861 16.5557 115.555 15.6707 114.945 14.9694C114.351 14.2681 113.486 13.9174 112.35 13.9174C111.282 13.9174 110.434 14.2681 109.806 14.9694C109.195 15.654 108.89 16.539 108.89 17.6244C108.89 18.7098 109.195 19.6031 109.806 20.3045C110.434 20.9891 111.282 21.3314 112.35 21.3314Z" fill="black"></path><path d="M130.127 11.7884H132.9V23.5105C132.9 25.2972 132.383 26.6831 131.348 27.6683C130.348 28.57 129.008 29.0209 127.329 29.0209C125.582 29.0209 124.225 28.6201 123.258 27.8186C122.41 27.0839 121.97 26.0736 121.936 24.7879H124.734C124.802 25.4558 125.022 25.9484 125.395 26.2657C125.786 26.5996 126.413 26.7666 127.278 26.7666C128.16 26.7666 128.855 26.4827 129.364 25.915C129.873 25.364 130.127 24.4957 130.127 23.3101V21.8323C129.364 23.1181 128.092 23.761 126.311 23.761C124.904 23.761 123.818 23.3185 123.055 22.4335C122.309 21.5318 121.936 20.3545 121.936 18.9018V11.7884H124.709V18.3257C124.709 20.3462 125.565 21.3564 127.278 21.3564C128.211 21.3564 128.915 21.0308 129.389 20.3796C129.881 19.7284 130.127 18.8768 130.127 17.8248V11.7884Z" fill="black"></path></g></g><defs><linearGradient id="paint0_linear_15_69" x1="4.94661" y1="11.2842" x2="0.890663" y2="14.0779" gradientUnits="userSpaceOnUse"><stop offset="0.113058" stop-color="#438946"></stop><stop offset="1" stop-color="#60B863" stop-opacity="0"></stop></linearGradient><linearGradient id="paint1_linear_15_69" x1="4.94663" y1="11.98" x2="9.60266" y2="5.14686" gradientUnits="userSpaceOnUse"><stop stop-color="#438946"></stop><stop offset="1" stop-color="#60B863" stop-opacity="0"></stop></linearGradient><linearGradient id="paint2_linear_15_69" x1="6.35991" y1="19.6332" x2="6.95277" y2="10.3284" gradientUnits="userSpaceOnUse"><stop stop-color="#438946"></stop><stop offset="1" stop-color="#60B863" stop-opacity="0"></stop></linearGradient><linearGradient id="paint3_linear_15_69" x1="9.71654" y1="21.8944" x2="9.96213" y2="26.5498" gradientUnits="userSpaceOnUse"><stop stop-color="#438946"></stop><stop offset="1" stop-color="#60B863" stop-opacity="0"></stop></linearGradient><linearGradient id="paint4_linear_15_69" x1="17.6665" y1="25.1992" x2="9.24333" y2="20.7434" gradientUnits="userSpaceOnUse"><stop stop-color="#438946"></stop><stop offset="1" stop-color="#60B863" stop-opacity="0"></stop></linearGradient><linearGradient id="paint5_linear_15_69" x1="18.3732" y1="25.5471" x2="24.7325" y2="25.9059" gradientUnits="userSpaceOnUse"><stop stop-color="#438946"></stop><stop offset="1" stop-color="#60B863" stop-opacity="0"></stop></linearGradient><clipPath id="clip0_15_69">
          <rect width="135" height="29" fill="black" transform="translate(0 0.5)"></rect></clipPath></defs></svg>
        <Header />
      </div>}
      <div className="w-full pb-10 flex justify-center">
        <div className="flex flex-col items-center w-full max-w-md h-full">
          {stages == 1 && (
            <div className="w-full flex h-full justify-center px-5">
              <Form setStage={setStage} />
            </div>
          )}
          {stages == 2 && (
            <div className="w-full h-full px-5 mt-6">
              <button className="mb-6" onClick={() => setStage(1)}>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="size-5"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18"
                  />
                </svg>
              </button>
              <EnterPin setStage={setStage} reconfirmation={false}/>
            </div>
          )}
                    {stages == 3 && (
            <div className="max-w-full w-[350px]  h-full px-5 mt-6">
              <button className="mb-6" onClick={() => setStage(2)}>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="size-5"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18"
                  />
                </svg>
              </button>
              <EnterPin setStage={setStage}  reconfirmation={true}/>
            </div>
          )}
{/* 

          {stages == 3 && (
            <div className="w-full h-full px-5 ">
              <div className="border-b py-2 mb-5 flex justify-between items-center">
                  <button className="" onClick={() => setStage(2)}>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke-width="1.5"
                      stroke="currentColor"
                      class="size-5"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18"
                      />
                    </svg>
                  </button>
                  <div className="font-bold text-lg">Confirm OTP</div>
                  <div className=""></div>
              </div>
              <VerifyOTP setStage={setStage} />
            </div>
          )} */}
        </div>
      </div>

      <div class="fixed bottom-[16px] right-5 bg-[#219653] w-[45px] h-[45px] flex items-center justify-center rounded-full"><svg xmlns="http://www.w3.org/2000/svg" width={24} fill="white" viewBox="0 0 28 32"><path d="M28 32s-4.714-1.855-8.527-3.34H3.437C1.54 28.66 0 27.026 0 25.013V3.644C0 1.633 1.54 0 3.437 0h21.125c1.898 0 3.437 1.632 3.437 3.645v18.404H28V32zm-4.139-11.982a.88.88 0 00-1.292-.105c-.03.026-3.015 2.681-8.57 2.681-5.486 0-8.517-2.636-8.571-2.684a.88.88 0 00-1.29.107 1.01 1.01 0 00-.219.708.992.992 0 00.318.664c.142.128 3.537 3.15 9.762 3.15 6.226 0 9.621-3.022 9.763-3.15a.992.992 0 00.317-.664 1.01 1.01 0 00-.218-.707z"></path></svg></div>
    </div>
  );
}

export default App;
